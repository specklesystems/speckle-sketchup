version: 2.1

orbs:
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  build-ui:
    docker:
      - image: "circleci/node:16"
    steps:
      - checkout
      - run:
          command: "npm install"
          working_directory: "ui"
      - run:
          command: "npm run build"
          working_directory: "ui"
      - persist_to_workspace:
          root: ./
          paths:
            - speckle_connector/vue_ui

  build-connector: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
      shell: cmd.exe
    parameters:
      slug:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Create Innosetup signing cert
          shell: powershell.exe
          command: |
            echo $env:PFX_B64 > "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.txt"
            certutil -decode "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.txt" "speckle-sharp-ci-tools\SignTool\AEC Systems Ltd.pfx"
      - run:
          name: Set Environment Variable
          shell: powershell.exe
          command: |
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "2.0.999" } else { $env:CIRCLE_TAG }
            $semver = if($tag.Contains('/')) {$tag.Split("/")[0] } else { $tag }
            $ver = if($semver.Contains('-')) {$semver.Split("-")[0] } else { $semver }
            $version = "$($ver).$($env:WORKFLOW_NUM)"
            python patch_version.py $semver
          environment:
            WORKFLOW_NUM: << pipeline.number >>
      - run:
          name: Build Installer
          command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\sketchup.iss /Sbyparam=$p
          shell: cmd.exe #does not work in powershell

      #- run:
      #    name: Patch
      #    shell: powershell.exe
      #    command:
      #      | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
      #      $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.0" } else { $env:CIRCLE_TAG }
      #      $semver = if($tag.Contains('/')) {$tag.Split("/")[1] } else { $tag }
      #      $ver = if($semver.Contains('-')) {$semver.Split("-")[0] } else { $semver }
      #      $channel = if($semver.Contains('-')) {$semver.Split("-")[1] } else { "latest" }
      #      $version = "$($ver).$($env:CIRCLE_BUILD_NUM)"
      #      New-Item -Force "speckle-sharp-ci-tools/Installers/sketchup/$channel.yml" -ItemType File -Value "version: $semver"
      #      echo $version
      #      python patch_version.py $semver
      #      speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\sketchup.iss
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers

  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "03:2e:ee:4f:14:67:2b:88:32:e8:cc:f0:cb:df:92:29"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command: git clone git@github.com:specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools
  deploy-manager2:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      os:
        type: string
      extension:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            /root/.dotnet/tools/Speckle.Manager.Feed deploy -s << parameters.slug >> -v ${SEMVER} -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >> -o << parameters.os >> -f speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>

workflows:
  build-and-deploy:
    jobs:
      - get-ci-tools:
          filters:
            tags:
              only: /.*/

      - build-ui:
          filters:
            tags:
              only: /.*/

      - build-connector:
          slug: sketchup
          requires:
            - get-ci-tools
            - build-ui
          filters:
            tags:
              only: /.*/
          context: innosetup

      - deploy-manager2:
          context: do-spaces-speckle-releases
          slug: sketchup
          os: Win
          extension: exe
          requires:
            - get-ci-tools
            - build-ui
            - build-connector
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
