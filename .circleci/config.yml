version: 2.1

orbs:
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0

jobs:
  build-ui:
    docker:
      - image: "circleci/node:16"
    steps:
      - checkout
      - run:
          command: "npm install"
          working_directory: "ui"
      - run:
          command: "npm run build"
          working_directory: "ui"
      - persist_to_workspace:
          root: ./
          paths:
            - speckle_connector/vue_ui

  build-connector: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
      shell: powershell.exe
    parameters:
      slug:
        type: string
        default: ""
    environment:
      SSM: 'C:\Program Files\DigiCert\DigiCert One Signing Manager Tools'
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Set Environment Variable
          shell: powershell.exe
          command: |
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "2.0.999" } else { $env:CIRCLE_TAG }
            $semver = if($tag.Contains('/')) {$tag.Split("/")[0] } else { $tag }
            $ver = if($semver.Contains('-')) {$semver.Split("-")[0] } else { $semver }
            $version = "$($ver).$($env:WORKFLOW_NUM)"
            python patch_version.py $semver
          environment:
            WORKFLOW_NUM: << pipeline.number >>
      - unless: # Build installers unsigned on non-tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Build Installer
                command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\sketchup.iss /Sbyparam=$p
                shell: cmd.exe # does not work in powershell
      - when: # Setup certificates and build installers signed for tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: "Digicert Signing Manager Setup"
                command: |
                  cd C:\
                  curl.exe -X GET https://one.digicert.com/signingmanager/api-ui/v1/releases/smtools-windows-x64.msi/download -H "x-api-key:$env:SM_API_KEY" -o smtools-windows-x64.msi
                  msiexec.exe /i smtools-windows-x64.msi /quiet /qn | Wait-Process
            - run:
                name: "Create Auth & OV Signing Cert"
                command: |
                  cd C:\
                  echo $env:SM_CLIENT_CERT_FILE_B64 > certificate.txt
                  certutil -decode certificate.txt certificate.p12
                  echo $env:SM_OV_PEM_CERT > SpeckleOVCertificate-2024.pem
            - run:
                name: "Sync Certs"
                command: |
                  & $env:SSM\smksp_cert_sync.exe
            - run:
                name: "Build Installer"
                command: speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\sketchup.iss /Sbyparam=$p /DSIGN_INSTALLER
                shell: cmd.exe
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers

  build-connector-mac:
    macos:
      xcode: 12.5.1
    parameters:
      projname:
        type: string
        default: ""
      slug:
        type: string
        default: ""
      installer:
        type: boolean
        default: false
      converter-files:
        type: string
        default: ""
      installername:
        type: string
        default: ""
      build-config:
        type: string
        default: Release
      bundlename:
        type: string
        default: ""
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install dotnet
          command: |
            curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --channel Current

            $HOME/.dotnet/dotnet --version
            $HOME/.dotnet/dotnet --list-runtimes
            $HOME/.dotnet/dotnet --list-sdks
      - run:
          name: Create installer target dir
          command: |
            mkdir -p speckle-sharp-ci-tools/Installers/<< parameters.slug >>
      - run:
          name: Set Environment Variable
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "2.0.999"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            VER=$(echo "$SEMVER" | sed -e 's/-.*//')
            VERSION=$(echo $VER.$WORKFLOW_NUM)
            python3 patch_version.py $SEMVER
          environment:
            WORKFLOW_NUM: << pipeline.number >>
      - run:
          name: Zip Connector files
          command: |
            zip -r << parameters.slug >>-mac.zip "./speckle_connector" "./speckle_connector.rb"
            # Copy installer files
      - run:
          name: Copy files to installer
          command: |
                  mkdir -p speckle-sharp-ci-tools/Mac/<< parameters.installername >>/.installationFiles/
                  cp << parameters.slug >>-mac.zip speckle-sharp-ci-tools/Mac/<<parameters.installername>>/.installationFiles
      # Create installer
      - run:
          name: Exit if External PR
          command: if [ "$CIRCLE_PR_REPONAME" ]; then circleci-agent step halt; fi
      - run:
          name: Build Mac installer
          command: ~/.dotnet/dotnet publish speckle-sharp-ci-tools/Mac/<<parameters.installername>>/<<parameters.installername>>.sln -r osx-x64 -c Release
      - run:
          name: Zip installer
          command: |
            cd speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/osx-x64/publish/
            zip -r <<parameters.slug>>.zip ./
      - store_artifacts:
          path: speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/osx-x64/publish/<<parameters.slug>>.zip
      - run:
          name: Copy to installer location
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "2.0.999"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            VER=$(echo "$SEMVER" | sed -e 's/-.*//')
            VERSION=$(echo $VER.$WORKFLOW_NUM)
            cp speckle-sharp-ci-tools/Mac/<<parameters.installername>>/bin/Release/net6.0/osx-x64/publish/<<parameters.slug>>.zip speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<<parameters.slug>>-$SEMVER.zip
          environment:
            WORKFLOW_NUM: << pipeline.number >>
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - persist_to_workspace:
                root: ./
                paths:
                  - speckle-sharp-ci-tools/Installers
  
  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "03:2e:ee:4f:14:67:2b:88:32:e8:cc:f0:cb:df:92:29"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command: git clone git@github.com:specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - run:
          name: Checkout branch
          command: |
            cd speckle-sharp-ci-tools
            if [ -z "$CIRCLE_TAG" ]
            then
                  git checkout ${CIRCLE_BRANCH} || git checkout main
            else
                  git checkout ${CIRCLE_TAG} || git checkout main
            fi
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools

  deploy-manager2:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      os:
        type: string
      extension:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            /root/.dotnet/tools/Speckle.Manager.Feed deploy -s << parameters.slug >> -v ${SEMVER} -u https://releases.speckle.dev/installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >> -o << parameters.os >> -f speckle-sharp-ci-tools/Installers/<< parameters.slug >>/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>

workflows:
  build-and-deploy:
    jobs:
      - get-ci-tools:
          filters:
            tags:
              only: /.*/

      - build-ui:
          filters:
            tags:
              only: /.*/

      - build-connector:
          slug: sketchup
          requires:
            - get-ci-tools
            - build-ui
          filters:
            tags:
              only: /.*/
          context: digicert-signing-connectors-test

      - build-connector-mac:
          slug: sketchup
          requires:
            - get-ci-tools
            - build-ui
          filters:
            tags:
              only: /.*/
          installername: SpeckleSketchUpInstall

      - deploy-manager2:
          context: do-spaces-speckle-releases
          slug: sketchup
          os: Win
          extension: exe
          requires:
            - build-connector
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
      - deploy-manager2:
          context: do-spaces-speckle-releases
          slug: sketchup
          os: OSX
          extension: zip
          requires:
            - build-connector-mac
          filters:
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/ # For testing only! /ci\/.*/
